version: '3.8'

services:
  # PostgreSQL with pgvector
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: goodlink_germany
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - goodlink-network

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - goodlink-network

  # FastAPI Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:password@postgres/goodlink_germany"
      REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/1"
      CELERY_RESULT_BACKEND: "redis://redis:6379/2"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      DEEPL_API_KEY: "${DEEPL_API_KEY}"
      DEBUG: "true"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - uploaded_files:/app/uploads
    networks:
      - goodlink-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:password@postgres/goodlink_germany"
      REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/1"
      CELERY_RESULT_BACKEND: "redis://redis:6379/2"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      DEEPL_API_KEY: "${DEEPL_API_KEY}"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - goodlink-network
    command: celery -A app.celery_app worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgresql+asyncpg://postgres:password@postgres/goodlink_germany"
      REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/1"
      CELERY_RESULT_BACKEND: "redis://redis:6379/2"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      DEEPL_API_KEY: "${DEEPL_API_KEY}"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - goodlink-network
    command: celery -A app.celery_app beat --loglevel=info

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: "http://localhost:8000/api/v1"
      NEXT_PUBLIC_WS_URL: "ws://localhost:8000/api/v1/chat/ws"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - goodlink-network
    command: npm run dev

  # Nginx (Production proxy)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    networks:
      - goodlink-network

volumes:
  postgres_data:
  redis_data:
  uploaded_files:

networks:
  goodlink-network:
    driver: bridge